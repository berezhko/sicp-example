(define (f k n)
    (cond ((= k 1) 1)
          ((= k (+ n 1)) 1)
          (else (+ (f (- k 1) (- n 1)) (f k (- n 1))))
    )
)

(define (f-iter count n)
    (cond ((= count (+ n 1)) (display (f count n)) (display "\n") 0)
          (else (display (f count n)) (display " ") (f-iter (+ 1 count) n))
))

(f-iter 1 1)
(f-iter 1 2)
(f-iter 1 3)
(f-iter 1 4)
(f-iter 1 5)
(f-iter 1 6)
(f-iter 1 7)
